# Remap the prefix from Ctrl+b to Crtl+s
unbind C-b
set -g prefix C-s

# Allow normal use of the prefix key combination if we double press it twice
# bind-key -r C-s send-prefix 
# NOTE: I haven't gotten this to work

# Reload the config file in tmux
bind-key r source-file ~/.tmux.conf\; display-message "~/.tmux.conf reloaded"

# Run commands in tmux
#<prefix> :

# Switch between panes
#<prefix> o

# Open already existing session
#tmux new-session -A -s <session-name>

# Navigation between panes
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

# Set the screen color
set-option -g default-terminal "screen-256color"

# Set linewise editing from shell in the status bar for commands
# C-a - beginning of command
# C-e - end of command
# C-p - go back through the command history
# C-n - go forward through the command history
set-option -g status-keys "emacs"

# Make status bar less pronounced
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'

# Show the full name of the session on the left side of the status bar
set-option -g status-left-length 60

# Show the Panes and Date on the right of the status bar
set-option -g status-right " #(date) [ PANE #P ] " 

# Splitting panes
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"

# Fine adjust pane size using Shift + <Arrow Key>
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjust pane size using Shift + <Arrow Key>
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Zooming and Unzooming a pane to fit the entire window
# <prefix> z

# Creating a Window
bind c new-window -c "#{pane_current_path}"


# Navigating Between Windows
# <prefix> <window number>
set -g base-index 1         # Start window numbering at 1
set -g renumber-windows on  # Renumber windows as they are created/destroyed

# Destorying a Window
# <prefix> d

# Switching to the previous window
# <prefix> l

# Move current pane to an new window
bind-key b break-pane
# bind-key b break-pane -d   # -d to keep focus on the current window

# Detach from session
# <prefix> d

# List Sessions
# tmux ls

# ----------------------------------------------------------------------
# Creating a session based on the current directory

# Save the following script in /bin/tat and make it executable.

# ----------------------------------------------------------------------
# #!/bin/sh
# #
# # Attach or create tmux session named the same as current directory.

# session_name="$(basename "$PWD" | tr . -)"

# session_exists() {
#     tmux list-sessions | sed -E 's/:.*$//' | grep -q "^$session_name$"
# }

# not_in_tmux() {
#     [ -z "$TMUX" ]
# }

# if not_in_tmux; then
#   tmux new-session -As "$session_name"
# else
#   if ! session_exists; then
#       (TMUX='' tmux new-session -Ad -s "$session_name")
#   fi
#   tmux switch-client -t "$session_name"
# fi
# ------------------------------------------------------------------------

# You can now run tat to create a tmux session based on the current directory



